[{"D:\\react\\cart\\src\\index.js":"1","D:\\react\\cart\\src\\App.js":"2","D:\\react\\cart\\src\\CartItem.js":"3"},{"size":220,"mtime":1606225156906,"results":"4","hashOfConfig":"5"},{"size":179,"mtime":1606230323437,"results":"6","hashOfConfig":"5"},{"size":2466,"mtime":1606376394423,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0uw68",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\react\\cart\\src\\index.js",[],"D:\\react\\cart\\src\\App.js",[],"D:\\react\\cart\\src\\CartItem.js",["15"],"import React from 'react';\r\n\r\nclass CartItem extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            price:999,\r\n            title:'Phone',\r\n            quantity:1,\r\n            img:''\r\n        }\r\n        //this.increaseQuantity = this.increaseQuantity.bind(this)\r\n    }\r\n    increaseQuantity = () => {\r\n        //this.state.quantity += 1;\r\n        //setState form 1\r\n        // this.setState({\r\n        //     quantity: this.state.quantity + 1\r\n        // })\r\n        //setState form 2 :-- use this when previous state is required\r\n        this.setState((preState)=>{\r\n            return{\r\n                quantity: preState.quantity + 1\r\n            }\r\n        })\r\n    }\r\n    decreaseQuantity=()=>{\r\n        this.setState({\r\n           quantity: this.state.quantity - 1\r\n         })\r\n    }\r\n    render(){\r\n        const {price,quantity} = this.state\r\n        return(\r\n            <div className=\"cart-item\">\r\n              <div className=\"left-block\">\r\n              <img style={styles.image}/>\r\n              </div>\r\n              <div className=\"right-block\">\r\n                    <div style={{fontSize:25}}>{this.state.title}</div>\r\n                    <div style={{color :'#777'}}>Rs {price}</div>\r\n                    <div style={{color :'#777'}}>{quantity}</div>\r\n                    <div className=\"cart-item-actions\">\r\n                     {/* kjhsdkhksd */}\r\n                            <img alt=\"increase\" \r\n                            className=\"action-icons\" \r\n                            src=\"https://www.flaticon.com/svg/static/icons/svg/1828/1828926.svg\" \r\n                            onClick={this.increaseQuantity}\r\n                            />\r\n                            <img alt=\"decrease\"\r\n                            className=\"action-icons\"\r\n                            src=\"https://www.flaticon.com/svg/static/icons/svg/1828/1828906.svg\"\r\n                            onClick={this.decreaseQuantity}\r\n                            />\r\n                            <img alt=\"delete\" \r\n                            className=\"action-icons\"\r\n                            src=\"https://www.flaticon.com/svg/static/icons/svg/1214/1214428.svg\" />\r\n                    </div>\r\n               </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nconst styles ={\r\n    image:{\r\n        height:110,\r\n        width:110,\r\n        borderRadius:4,\r\n        backgroundColor:'#ccc'\r\n    }\r\n}\r\nexport default CartItem;",{"ruleId":"16","severity":1,"message":"17","line":37,"column":15,"nodeType":"18","endLine":37,"endColumn":42},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]