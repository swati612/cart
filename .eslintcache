[{"D:\\react\\cart\\src\\index.js":"1","D:\\react\\cart\\src\\App.js":"2","D:\\react\\cart\\src\\CartItem.js":"3","D:\\react\\cart\\src\\Cart.js":"4","D:\\react\\cart\\src\\Navbar.js":"5"},{"size":681,"mtime":1606970505313,"results":"6","hashOfConfig":"7"},{"size":4534,"mtime":1607332510120,"results":"8","hashOfConfig":"7"},{"size":1997,"mtime":1606573352910,"results":"9","hashOfConfig":"7"},{"size":703,"mtime":1606568127452,"results":"10","hashOfConfig":"7"},{"size":969,"mtime":1606569321315,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0uw68",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\react\\cart\\src\\index.js",[],"D:\\react\\cart\\src\\App.js",["25","26"],"\nimport React from 'react';\nimport Cart from './Cart';\nimport Navbar from './Navbar';\nimport firebase from 'firebase';\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    \n    this.state={\n     products:[],\n     loading: true\n    }\n    this.db =firebase.firestore()\n    \n}\ncomponentDidMount(){\n  // firebase\n  // .firestore()\n  // .collection('products')\n  // .get().then((snapshot) =>{\n  //   console.log(snapshot)\n  //   snapshot.docs.map((doc)=>{\n  //     console.log(doc.data())\n  //   })\n  //   const products =  snapshot.docs.map((doc)=>{\n  //     const data =doc.data();\n  //     data['id'] = doc.id;\n  //    return data\n  //   })\n  //   this.setState({\n  //     // products:products\n  //     products,\n  //     loading:false\n  // })\n  // })\n\n  this.db\n   .collection('products')\n   //.where('price','>',999)\n  //.where('title','==',mug)\n  //.orderBy('price')\n  .orderBy('price','desc')\n   .onSnapshot((snapshot)=>{\n    console.log(snapshot)\n  \n   snapshot.docs.map((doc)=>{\n       console.log(doc.data())\n      });\n      const products =  snapshot.docs.map((doc)=>{\n        const data =doc.data();\n         data['id'] = doc.id;\n          return data\n       })\n       this.setState({\n        // products:products\n        products,\n        loading:false\n    })\n})\n}\nhandlerIncreaseQuantity = (product) =>{\n    console.log(\"increase\",product)\n    const {products} = this.state\n    const index = products.indexOf(product)\n   // products[index].quantity +=1;\n   // this.setState({\n    //    // products:products\n   //     products\n  //  })\n  const docRef= this.db.collection('products').doc(products[index].id)\n  docRef.update({\n    quantity:products[index].quantity +1\n  })\n  .then(()=>{\n    console.log(\"updated successfully\")\n  })\n  .catch((error)=>{\n    console.log(\"error\",error )\n  })\n  \n  \n}\nhandlerDecreaseQuantity =(product) =>{\n    console.log(\"decrease\",product)\n    const {products} = this.state\n    const index = products.indexOf(product)\n    if (products[index].quantity ===0){\n     return (console.log(\"0\"))\n    }\n    // products[index].quantity -=1;\n    // this.setState({\n    //     // products:products\n    //     products\n    // })\n    const docRef= this.db.collection('products').doc(products[index].id)\n    docRef.update({\n      quantity:products[index].quantity -1\n    })\n    .then(()=>{\n      console.log(\"updated successfully\")\n    })\n    .catch((error)=>{\n      console.log(\"error\",error )\n    })\n}\nhandlerDeleteProduct = (id)=>{\n    const {products} = this.state\n    // const items = products.filter((item)=>\n    // item.id !== id\n    // )\n    // this.setState({\n    //     products:items,\n    // })\n    const docRef= this.db.collection('products').doc(id)\n    docRef\n    .delete()\n    .then(()=>{\n      console.log(\"deleted successfully\")\n    })\n    .catch((error)=>{\n      console.log(\"error\",error )\n    })\n}\n\ngetCartCount =()=>{\n        const {products} = this.state\n        let count =0;\n\n        products.forEach((product) => {\n          count +=product.quantity\n        });\n        return count;\n      }\n\n      getCartTotal = () => {\n        const { products } = this.state;\n    \n        let cartTotal = 0;\n    \n        products.map((product) => {\n          if(product.quantity>0){\n          cartTotal = cartTotal + product.quantity * product.price\n        }\n        return ''\n      })\n      \n    \n        return cartTotal;\n      }\n      addProduct = () =>{ \n        this.db\n         .collection('products')\n         .add({\n           img:'https://img.tatacliq.com/images/i5/437Wx649H/MP000000005696744_437Wx649H_20191006021007.jpeg',\n           price:900,\n           quantity:3,\n           title:\"washing machine\"\n         })\n         .then((docRef)=>{\n                 console.log('product has been added', docRef);\n         }).catch((error)=>{\n                 console.log(\"error\",error)\n         })\n\n      }\n  render(){\n\n    const {products,loading} = this.state\n      return (\n        <div className=\"App\">\n        <Navbar count ={this.getCartCount()}/>\n        <button onClick={this.addProduct} style={{padding:15, fontSize:18}}>Add a Prodcut</button>\n        <Cart \n        products={products}\n        onIncreaseQuantity= {this.handlerIncreaseQuantity}\n        ondecreaseQuantity= {this.handlerDecreaseQuantity}\n        onDeleteProduct = {this.handlerDeleteProduct}\n        />\n        {loading && <h1>Loading Products ...</h1>}\n        <div style={ {padding: 10, fontSize: 20} }>TOTAL: Rs {this.getCartTotal()} </div>\n\n        </div>\n      );\n    }\n}\nexport default App;\n","D:\\react\\cart\\src\\CartItem.js",["27"],"import React from 'react';\r\n\r\nconst CartItem = (props) => {\r\n        console.log(props)\r\n        const {price,quantity,title} = props.product;\r\n        const {\r\n            product,\r\n            onIncreaseQuantity,\r\n            ondecreaseQuantity, \r\n            onDeleteProduct\r\n        } = props;\r\n\r\n        return(\r\n            <div className=\"cart-item\">\r\n              <div className=\"left-block\">\r\n              <img style={styles.image} src={product.img}/>\r\n              </div>\r\n              <div className=\"right-block\">\r\n                    <div style={{fontSize:25}}>{title}</div>\r\n                    <div style={{color :'#777'}}>Rs {price}</div>\r\n                    <div style={{color :'#777'}}>{quantity}</div>\r\n                    <div className=\"cart-item-actions\">\r\n                     {/* kjhsdkhksd */}\r\n                            <img alt=\"increase\" \r\n                            className=\"action-icons\" \r\n                            src=\"https://www.flaticon.com/svg/static/icons/svg/1828/1828926.svg\" \r\n                            onClick={()=>onIncreaseQuantity(product)}\r\n                            />\r\n                            <img alt=\"decrease\"\r\n                            className=\"action-icons\"\r\n                            src=\"https://www.flaticon.com/svg/static/icons/svg/1828/1828906.svg\"\r\n                            onClick={()=>ondecreaseQuantity(product)}\r\n                            />\r\n                            <img alt=\"delete\" \r\n                            className=\"action-icons\"\r\n                            src=\"https://www.flaticon.com/svg/static/icons/svg/1214/1214428.svg\" \r\n                            onClick={()=>onDeleteProduct(product.id)}\r\n                            />\r\n                    </div>\r\n               </div>\r\n            </div>\r\n            )\r\n    }\r\n\r\nconst styles ={\r\n    image:{\r\n        height:110,\r\n        width:110,\r\n        borderRadius:4,\r\n        backgroundColor:'#ccc'\r\n    }\r\n}\r\nexport default CartItem;","D:\\react\\cart\\src\\Cart.js",[],"D:\\react\\cart\\src\\Navbar.js",[],["28","29"],{"ruleId":"30","severity":1,"message":"31","line":49,"column":27,"nodeType":"32","messageId":"33","endLine":49,"endColumn":29},{"ruleId":"34","severity":1,"message":"35","line":110,"column":12,"nodeType":"36","messageId":"37","endLine":110,"endColumn":20},{"ruleId":"38","severity":1,"message":"39","line":16,"column":15,"nodeType":"40","endLine":16,"endColumn":60},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-global-assign","no-unsafe-negation"]